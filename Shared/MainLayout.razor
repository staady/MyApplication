@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />




<MudLayout>
    <MudAppBar Elevation="0">



      <span class="gg"> <MudImage Src="images/logo.png" Alt="Mony the dog" Elevation="25" Class="rounded-lg"  /></span>

            <MudItem xs="6" sm="6">
            </MudItem>
            <MudItem xs="6" sm="6" md="4">
            <span class="gh"> <MudAutocomplete T="string" Label="Поиск" @bind-Value="value1" SearchFunc="@Search1" Margin="@_margin" Dense="@_dense" Variant="Variant.Outlined" /></span>
        </MudItem>
        <MudIconButton Href="" Icon="@Icons.Filled.Search" aria-label="delete"></MudIconButton>

        <MudGrid Justify="Justify.Center">
            <MudItem>
                <MudButton Href="/" Variant="Variant.Filled" Color="Color.Warning">Главное</MudButton>
            </MudItem>
           <MudItem>
               <MudButton Href="Counter" Variant="Variant.Filled" Color="Color.Warning">Поиск</MudButton>
           </MudItem>
               <MudItem>
                   <MudButton Href="fetchdata" Variant="Variant.Filled" Color="Color.Warning">Расписание</MudButton>
               </MudItem>
            <MudItem>
            <MudButton Variant="Variant.Filled" Color="Color.Warning">Secondary</MudButton>
            </MudItem>
           <MudItem>
               <MudButton Variant="Variant.Filled" Color="Color.Warning">Secondary</MudButton>
           </MudItem>
        </MudGrid>
     

        <MudSpacer />


        @if (_isDarkMode)
        {
          
            <MudIconButton OnClick="DrawerToggle" Icon="@Icons.Filled.WbSunny" aria-label="delete"></MudIconButton>
        }
        else{
            <MudIconButton OnClick="DrawerToggle" Icon="@Icons.Filled.DarkMode" aria-label="delete"></MudIconButton>
        }
        
        <MudText Class="ma-4"></MudText>
      
        <MudMenu>
        <ActivatorContent> 
            <MudAvatar Image="images/avatar.jpg"></MudAvatar>
        </ActivatorContent>
        <ChildContent>
            <MudMenuItem>Войти</MudMenuItem>
        </ChildContent>
        </MudMenu>

       
    </MudAppBar>

    <MudMainContent>
       @* <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">*@
            @Body
     @*   </MudContainer>*@
    </MudMainContent>
</MudLayout>

@code {
    Margin _margin = Margin.None;
    bool _dense = false;

    private void ChangeMargin()
    {
        if (_margin == Margin.None)
        {
            _margin = Margin.Dense;
        }
        else
        {
            _margin = Margin.None;
        }
    }

    private string value1;
    private string[] states =
    {
        "Alabama", "Alaska", "American Samoa", "Arizona",
        "Arkansas", "California", "Colorado", "Connecticut",
        "Delaware", "District of Columbia", "Federated States of Micronesia",
        "Florida", "Georgia", "Guam", "Hawaii", "Idaho",
        "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky",
        "Louisiana", "Maine", "Marshall Islands", "Maryland",
        "Massachusetts", "Michigan", "Minnesota", "Mississippi",
        "Missouri", "Montana", "Nebraska", "Nevada",
        "New Hampshire", "New Jersey", "New Mexico", "New York",
        "North Carolina", "North Dakota", "Northern Mariana Islands", "Ohio",
        "Oklahoma", "Oregon", "Palau", "Pennsylvania", "Puerto Rico",
        "Rhode Island", "South Carolina", "South Dakota", "Tennessee",
        "Texas", "Utah", "Vermont", "Virgin Island", "Virginia",
        "Washington", "West Virginia", "Wisconsin", "Wyoming",
    };

    private async Task<IEnumerable<string>> Search1(string value)
    {
        // In real life use an asynchronous function for fetching data from an api.
        await Task.Delay(5);

        // if text is null or empty, show complete list
        if (string.IsNullOrEmpty(value))
            return states;
        return states.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }
}

@code {
    private MudTheme _theme = new();
    private bool _isDarkMode = true;

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _isDarkMode = !_isDarkMode;
    }
}
